return {
  setup = function(colors)
    hi("LspDiagnosticsSignError", { guifg = colors.syntax.color17 })
    hi("LspDiagnosticsFloatingError", { guifg = colors.syntax.color17 })
    hi("LspDiagnosticsVirtualTextError", { guifg = colors.syntax.color17 })
    hi("LspDiagnosticsUnderlineError", { gui = "undercurl,bold", guisp = colors.syntax.color17 })
    hi("LspDiagnosticsDefaultWarning", { guifg = colors.syntax.color08 })
    hi("LspDiagnosticsSignWarning", { guifg = colors.syntax.color08 })
    hi("LspDiagnosticsFloatingWarning", { guifg = colors.syntax.color08, gui = "bold" })
    hi("LspDiagnosticsVirtualTextWarning", { guifg = colors.syntax.color08, gui = "bold" })
    hi("LspDiagnosticsUnderlineWarning", { gui = "undercurl", guisp = colors.syntax.color08 })
    hi("LspDiagnosticsDefaultInformation", { guifg = colors.syntax.color13, gui = "italic" })
    hi("LspDiagnosticsSignInformation", { guifg = colors.syntax.color13 })
    hi("LspDiagnosticsFloatingInformation", { guifg = colors.syntax.color13 })
    hi("LspDiagnosticsVirtualTextInformation", { guifg = colors.syntax.color13, gui = "italic" })
    hi("LspDiagnosticsUnderlineInformation", { gui = "undercurl", guisp = colors.syntax.color13 })
    hi("LspDiagnosticsDefaultHint", { guifg = colors.syntax.color09 })
    hi("LspDiagnosticsSignHint", { guifg = colors.syntax.color09 })
    hi("LspDiagnosticsFloatingHint", { guifg = colors.syntax.color09 })
    hi("LspDiagnosticsVirtualTextHint", { guifg = colors.syntax.color09 })
    hi("LspDiagnosticsUnderlineHint", { gui = "undercurl", guisp = colors.syntax.color09 })
    hi("LspReferenceText", { guifg = colors.syntax.color12, guibg = colors.common.base01, gui = "bold" })
    hi("LspReferenceRead", { guifg = colors.syntax.color16, guibg = colors.common.base01, gui = "bold" })
    hi("LspReferenceWrite", { guifg = colors.syntax.color06, guibg = colors.common.base01, gui = "bold" })
    hi("DiagnosticError", { link = "LspDiagnosticsDefaultError" })
    hi("DiagnosticWarn", { link = "LspDiagnosticsDefaultWarning" })
    hi("DiagnosticInfo", { link = "LspDiagnosticsDefaultInformation" })
    hi("DiagnosticHint", { link = "LspDiagnosticsDefaultHint" })
    hi("DiagnosticVirtualTextWarn", { link = "LspDiagnosticsVirtualTextWarning" })
    hi("DiagnosticUnderlineWarn", { link = "LspDiagnosticsUnderlineWarning" })
    hi("DiagnosticFloatingWarn", { link = "LspDiagnosticsFloatingWarning" })
    hi("DiagnosticSignWarn", { link = "LspDiagnosticsSignWarning" })
    hi("DiagnosticVirtualTextError", { link = "LspDiagnosticsVirtualTextError" })
    hi("DiagnosticUnderlineError", { link = "LspDiagnosticsUnderlineError" })
    hi("DiagnosticFloatingError", { link = "LspDiagnosticsFloatingError" })
    hi("DiagnosticSignError", { link = "LspDiagnosticsSignError" })
    hi("DiagnosticVirtualTextInfo", { link = "LspDiagnosticsVirtualTextInformation" })
    hi("DiagnosticUnderlineInfo", { link = "LspDiagnosticsUnderlineInformation" })
    hi("DiagnosticFloatingInfo", { link = "LspDiagnosticsFloatingInformation" })
    hi("DiagnosticSignInfo", { link = "LspDiagnosticsSignInformation" })
    hi("DiagnosticVirtualTextHint", { link = "LspDiagnosticsVirtualTextHint" })
    hi("DiagnosticUnderlineHint", { link = "LspDiagnosticsUnderlineHint" })
    hi("DiagnosticFloatingHint", { link = "LspDiagnosticsFloatingHint" })
  end,
}

-- vim:ft=lua
